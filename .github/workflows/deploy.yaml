name: Deploy

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: 0 10 * * *

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.export.outputs.version }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Get new version
        id: export
        run: |
          LATEST_TAG=$(git tag -l --sort=-v:refname | head -n 1)
          VERSION=$(grep '"version":' package.json | sed -E 's/.*"version": "([^"]+)".*/\1/')
              if [ -n "$VERSION" ] && [ "$VERSION" = "$LATEST_TAG" ]; then
              echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          else
              echo "version=" >> "$GITHUB_OUTPUT"
          fi

  do-release:
    runs-on: ubuntu-latest
    needs: [setup]
    if: ${{ needs.setup.outputs.version != '' }}

    env:
      VERSION: ${{ needs.setup.outputs.version }}

    steps:
      - name: New release
        run: echo $VERSION

  release-gh:
    name: Publish tags and create GH Release
    runs-on: ubuntu-latest
    needs: [setup, do-release]

    env:
      VERSION: ${{ needs.setup.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Create tag
        run: git tag v$VERSION

      - name: Push changes
        run: |
          git push --tags

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: gh release create v$VERSION -F CHANGELOG.md

  update-parent:
    needs: [setup, do-release]
    name: Update Parent
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ needs.setup.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: marcyleite/yara
          token: ${{ secrets.PARENT_REPO_GITHUB_TOKEN  }}
          submodules: true

      - name: Pull & update submodules recursively
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote

      - name: Commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add --all

          git commit -m ":truck: Update web client version $VERSION" || echo "No changes to commit"
          git push

  release-image:
    name: Release image in Docker Hub
    runs-on: ubuntu-latest
    needs: [setup, do-release]

    env:
      VERSION: ${{ needs.setup.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Download package.json
        uses: actions/download-artifact@v4
        with:
          name: package-json

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            marcyleite/yara-web-client:${{ needs.update.outputs.version }}
            marcyleite/yara-web-client:latest

  deploy-demo:
    needs: [setup, do-release]

    runs-on: ubuntu-latest
    name: Deploy demo (GitHub Pages)

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download package.json
        uses: actions/download-artifact@v4
        with:
          name: package-json

      - run: npm ci

      - name: Build demo
        run: npm run build:demo

      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
