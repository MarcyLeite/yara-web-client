name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build (production & demo)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci

      - name: Run build for demo
        run: npm run build:demo
      - name: Run build for production
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: [build]
    name: Test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run test

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    name: Lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  type-check:
    runs-on: ubuntu-latest
    needs: [build]
    name: Type Check
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci

      - name: Run Typescript type check
        run: npm run lint

  check-release:
    runs-on: ubuntu-latest

    if: ${{ github.ref == 'refs/heads/main' }}

    needs: [build, test, lint, type-check]
    name: Check for new release

    outputs:
      version: ${{ steps.export.outputs.version }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Analyze branch for new release
        id: export
        run: |
          export VERSION=$(npm run analyze-release | tail -n 1)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Export artifacts
        if: ${{ steps.export.outputs.version != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: updated-files
          path: |
            CHANGELOG.md
            package.json
            package-lock.json

  pre-release:
    name: Create and update release branch

    runs-on: ubuntu-latest
    needs: [check-release]

    if: ${{ needs.check-release.outputs.version != '' }}
    env:
      VERSION: ${{ needs.check-release.outputs.version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Checkout release branch
        run: |
          git checkout release || git checkout -b release
          git rebase main -f

      - uses: actions/download-artifact@v4
        with:
          name: updated-files
          path: .

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md package.json
          git commit -m "ðŸ”– Release version $VERSION"

      - name: Push changes
        run: git push origin release

      - name: Create PR
        run: |
          PR_EXISTS=$(gh pr list --base "main" --head "release" --json number --jq 'length')
          if [ "$PR_EXISTS" -eq 0 ]; then
            gh pr create --base "main" --head "release" --title "ðŸ”– Release version $VERSION" --body-file CHANGELOG.md
          else
            PR_NUMBER=$(gh pr list --base "main" --head "release" --json number --jq '.[0].number')
            gh pr edit "$PR_NUMBER" --title "ðŸ”– Release version $VERSION" --body-file CHANGELOG.md
          fi
